spring:
  sql:
    init:
      mode: always
      platform: postgres
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PWD}
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        time_zone: UTC
        dialect: org.hibernate.dialect.PostgreSQLDialect
        hbm2ddl:
          import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        jdbc:
          lob:
            non_contextual_creation: true
  #    show-sql: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_ID}
    password: ${MAIL_SECRET}
    test-connection: true
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENT_ID}
            clientSecret: ${GOOGLE_CLIENT_SECRET}
            redirectUri: "{baseUrl}/api/v1/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile

# App Properties
app:
  jwt-secret: ${STOREUM_JWT_SECRET}
  jwt-expiration-ms: ${STOREUM_JWT_EXPIRE_TIME}
  jwt-refresh-expiration-ms: ${STOREUM_JWT_REFRESH_EXPIRE_TIME}
  client-base-url: http://localhost:3000

#debug: true
#logging:
#  level:
#    org:
#      springframework:
#        context: DEBUG